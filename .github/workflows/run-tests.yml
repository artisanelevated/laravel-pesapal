name: run-tests

on: pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        php: [8.3, 8.2, 8.1]
        laravel: [10.*, 11.*]
        stability: [prefer-stable]
        include:
          - os: ubuntu-latest
            db: mysql
          - os: ubuntu-latest
            db: pgsql
          - os: windows-latest
            db: sqlite # Use SQLite for Windows
          - laravel: 10.*
            testbench: 8.*
            carbon: ^2.72.3
          - laravel: 11.*
            testbench: 9.*
            carbon: ^2.72.3
        exclude:
          - laravel: 11.*
            php: 8.1

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.db }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, pdo_mysql, pdo_pgsql
          coverage: xdebug

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        env:
          DB_CONNECTION: ${{ matrix.db }}
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ matrix.db == 'mysql' && '3306' || matrix.db == 'pgsql' && '5432' || '' }}
          DB_DATABASE: ${{ matrix.db == 'sqlite' && ':memory:' || 'test' }}
          DB_USERNAME: ${{ matrix.db == 'mysql' && 'root' || matrix.db == 'pgsql' && 'postgres' || '' }}
          DB_PASSWORD: ${{ matrix.db == 'mysql' && '' || matrix.db == 'pgsql' && 'postgres' || '' }}
        run: vendor/bin/pest --ci
